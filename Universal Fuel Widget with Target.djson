{"Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"0"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":0,"Interpreter":1,"Expression":"return { remaining: $prop('DataCorePlugin.Computed.Fuel_RemainingLaps') || 34, loadedFuel: $prop('MaxFuel') || 115 };"},"EvaluateBeforeScreenRoles":false}]},"DashboardDebugManager":{},"Version":2,"Id":"a2296975-54b7-45fd-8d9d-6659185d86ef","BaseHeight":768,"BaseWidth":1280,"BackgroundColor":"#FF000000","Screens":[{"RenderingSkip":0,"Name":"Screen","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"de785561-f0dc-4982-8e6f-ffe1a0c6455e","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontWeight":"Medium","FontStyle":"Italic","FontSize":50.0,"Text":"12.5","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":223.0,"Top":286.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"Name":"FuelELaps","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.00","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root, 5, validLap);\r\nconst averageUsage = calculateArrayAverage(lastLapUsages);\r\n\r\nconst result = fuelState / averageUsage;\r\n\r\nreturn !Number.isNaN(result) ? fuelState / averageUsage : '-'","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"ELaps","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":223.0,"Top":237.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"Name":"FuelELapsText","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":45.0,"Text":"45:13.725","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":200.0,"Top":619.0,"Visible":true,"BlinkPhasisInverted":false,"Width":260.0,"IsFreezed":true,"Name":"Fuel Time","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"mm\\:ss\\.fff","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'time');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {}\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = calculateArrayAverage(lastLapUsages);\r\n\r\nconst result = fuelState / averageUsage;\r\n\r\nconst lastLapTime = $prop('LastLapTime');\r\nroot.lapTimes = root.lapTimes ?? {}\r\nconst validLapTimes = cycleValuesOverNLaps(currentLap, timespantoseconds(lastLapTime), root.lapTimes, 5, validLap);\r\nconst averageLapTime = calculateArrayAverage(validLapTimes);\r\n\r\nreturn !Number.isNaN(result) ? secondstotimespan((fuelState / averageUsage) * averageLapTime) : '--:--.---'","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":45.0,"Text":"ETime","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":216.0,"Top":561.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"IsFreezed":true,"Name":"Fuel Time Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"time\", root);\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":45.0,"Text":"ToAdd","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":68.0,"Left":14.0,"Top":561.0,"Visible":true,"BlinkPhasisInverted":false,"Width":200.0,"IsFreezed":true,"Name":"FuelToAdd Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"Text":"150L","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":100.0,"Left":30.0,"Top":604.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"IsFreezed":true,"Name":"FuelToAdd","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0L","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\n\r\nconst currentLap = $prop('CurrentLap')\r\nconst lastLap = timespantoseconds($prop('LastLapTime'))\r\nconst timeSes = timespantoseconds($prop('SessionTimeLeft'))\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawState = $prop(stateProp);\r\nconst fuelTank = getFinalState(rawState);\r\n\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst rawValue = $prop(property);\r\nconst lastFuel = getFinalValue(rawValue);\r\n\r\nroot.estimate = root.estimate ?? {};\r\n\r\nreturn estimateRequiredForSeconds(currentLap, lastLap, fuelTank, lastFuel, timeSes, root.estimate, validLap);","PreExpression":"const config = loadFromConfig();"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.BuiltIn.FuelText, SimHub.Plugins","Format":"0.00","NoDataText":"N/A","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":255.0,"Top":189.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"IsFreezed":true,"Name":"Fuel","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"Tank","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":223.0,"Top":140.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"IsFreezed":true,"Name":"FuelText","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"TLap","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":3.0,"Top":140.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"IsFreezed":true,"Name":"Lap Fuel Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"usage\", root);\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"Text":"10.40","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":40.0,"Top":189.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"IsFreezed":true,"Name":"Lap Fuel Actual","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.00L","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\n\r\nconst { property, transformation, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"usage\", root);\r\n\r\nconst rawValue = $prop(property);\r\n\r\nconst value = getFinalValue(rawValue);\r\n\r\nif (value < 0) {\r\n\treturn '-'\r\n}\r\n\r\nreturn value;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2},"TextColor":{"Formula":{"Expression":"if([DataCorePlugin.Computed.Fuel_CurrentLapConsumption]>[DataCorePlugin.Computed.Fuel_LastLapConsumption], '#FFE82222', '#FFFFFFFF')"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"Lap Δ","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":10.0,"Top":339.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"IsFreezed":true,"Name":"Fuel Delta Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgDelta\", root);\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"Text":"0.00","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":40.0,"Top":387.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"IsFreezed":true,"Name":"Fuel Delta","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.00","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\n\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgDelta\", root);\r\n\r\nconst rawValue = $prop(property);\r\n\r\nconst currentValue = getFinalValue(rawValue);\r\nconst currentLapNumber = $prop('CurrentLap');\r\n\r\nconst delta = formattedDeltaOverLastLap(currentLapNumber, currentValue, root);\r\n\r\nreturn delta","PreExpression":"const config = loadFromConfig(root);"},"Mode":2},"TextColor":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\n\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgDelta\", root);\r\n\r\nconst rawValue = $prop(property);\r\n\r\nconst currentValue = getFinalValue(rawValue);\r\nconst currentLapNumber = $prop('CurrentLap');\r\n\r\nconst delta = formattedDeltaOverLastLap(currentLapNumber, currentValue, root);\r\n\r\nconst { color: positiveColor, defaultForeground } = getThemeColorValueFromConfig(config, currentGame, carClass, carId, \"positive\");\r\n\r\nconst { color: negativeColor } = getThemeColorValueFromConfig(config, currentGame, carClass, carId, \"negative\");\r\n\r\nif(parseInt(delta) === 0) {\r\n\treturn defaultForeground;\r\n}\r\n\r\nreturn delta > 0 ? positiveColor : negativeColor;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"Tgt 32 (+0)","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":222.0,"Top":339.0,"Visible":true,"BlinkPhasisInverted":false,"Width":239.0,"Name":"Target Delta Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":0,"Interpreter":1,"Expression":"const targetLaps = Math.floor($prop('variable.estimatedLaps').remaining) + $prop('variable.targetOffset')\r\n\r\nreturn \"Tgt \" + targetLaps + \"L (\" + ($prop('variable.targetOffset') >= 0 ? \"+\" : \"\") + $prop('variable.targetOffset') + \")\""},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":45.0,"Text":"-0.15 (2.87)","TextColor":"#FF00FF00","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":210.0,"Top":387.0,"Visible":true,"BlinkPhasisInverted":false,"Width":260.0,"Name":"Target Delta","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.00","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst isPit = $prop('IsInPit');\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'state');\r\n\r\nconst rawValue = $prop(property);\r\nconst curFuel = getFinalValue(rawValue);\r\n\r\nconst { remaining, loadedFuel } = $prop('variable.estimatedLaps');\r\n\r\nconst targetUsage = cycle(isPit, currentLap, curFuel, remaining + $prop\r\n('variable.targetOffset'), loadedFuel);\r\n\r\nif(targetUsage == null) {\r\n\treturn '- (-)';\r\n}\r\n\r\nif(Number.isNaN(targetUsage)) {\r\n\treturn '- (-)';\r\n}\r\n\r\nconst { property: lastLapUsageProp, getFinalValue: getLastLapUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'lapUsage');\r\n\r\nconst rawLastLapUsage = $prop(lastLapUsageProp);\r\n\r\nlet delta = 0;\r\nlet a =0;\r\nlet b = 0;\r\nif(rawLastLapUsage) {\r\n\tconst lastLapUsage = getLastLapUsage(rawLastLapUsage);\r\n\tdelta = lastLapUsage - targetUsage;\r\n\ta = lastLapUsage;\r\n} else {\r\n\tconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'avgUsage');\r\n\t\r\n\tconst rawAvgUsage = $prop(avgUsageProp);\r\n\tconst avgUsage = getAvgUsage(rawAvgUsage);\r\n\tb = avgUsage;\r\n\tdelta = avgUsage - targetUsage;\r\n}\r\n\r\nreturn (delta > 0 ? '+' : '') + delta.toFixed(2) + ' (' + targetUsage.toFixed(2) + ')';","PreExpression":"const config = loadFromConfig(root);\r\n\r\nfunction cycle(isPit, currentLap, curFuel, initialBaseline, initialFuel) {\r\nroot.isPit = root.isPit ?? isPit;\r\n    root.prevLap = root.prevLap ?? 0;\r\n    root.fuelState = root.fuelState ?? 0;\r\n\r\n    if (isPit) {\r\n        root.prevLap = null;\r\n        root.baseline = null;\r\n        root.fuelState = null;\r\n    } else {    \r\n\t    if(root.baseline === null || root.baseline === undefined) {\r\n\t        root.baseline = initialBaseline;\r\n\t    }\r\n\t    \r\n\t    if(root.fuelState === null || root.fuelState === undefined) {\r\n\t    \troot.fuelState = initialFuel;\r\n\t    }\r\n\t}\r\n\r\n    if (root.prevLap > currentLap) {\r\n        root.prevLap = currentLap;\r\n    }\r\n\r\n    if (root.prevLap < currentLap && root.baseline) {\r\n        root.baseline = root.baseline - 1;\r\n        root.prevLap = currentLap;\r\n\r\n        if (!isPit && !root.isPit) {\r\n            root.fuelState = curFuel;\t\r\n        }\r\n    }\r\n    \r\n    if(isPit) {\r\n    \treturn null;\r\n    }\r\n    \r\n    const target = Math.ceil(root.baseline + 0);\r\n    const targetUsage = root.fuelState / (target + 1);\r\n    \r\n\treturn isPit ? null : targetUsage;\r\n}"},"Mode":2},"TextColor":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst isPit = $prop('IsInPit');\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'state');\r\n\r\nconst rawValue = $prop(property);\r\nconst curFuel = getFinalValue(rawValue);\r\n\r\nconst { remaining, loadedFuel } = $prop('variable.estimatedLaps');\r\n\r\nconst targetUsage = cycle(isPit, currentLap, curFuel, remaining + $prop('variable.targetOffset'), loadedFuel);\r\n\r\nif(targetUsage == null) {\r\n\treturn '- (-)';\r\n}\r\n\r\nif(Number.isNaN(targetUsage)) {\r\n\treturn '- (-)';\r\n}\r\n\r\nconst { property: lastLapUsageProp, getFinalValue: getLastLapUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'lapUsage');\r\n\r\nconst rawLastLapUsage = $prop(lastLapUsageProp);\r\n\r\nlet delta = 0;\r\n\r\nif(rawLastLapUsage) {\r\n\tconst lastLapUsage = getLastLapUsage(rawLastLapUsage);\r\n\tdelta = lastLapUsage - targetUsage;\r\n} else {\r\n\tconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'avgUsage');\r\n\t\r\n\tconst rawAvgUsage = $prop(avgUsageProp);\r\n\tconst avgUsage = getAvgUsage(rawAvgUsage);\r\n\t\r\n\tdelta = avgUsage - targetUsage;\r\n}\r\n\r\nconst result = delta;\r\n\r\nif(Number.isNaN(result) || !result) {\r\n\treturn 1;\r\n}\r\n\r\nreturn result < 0 ? 0 : 2;","PreExpression":"const config = loadFromConfig(root);\r\n\r\nfunction cycle(isPit, currentLap, curFuel, initialBaseline, initialFuel) {\r\nroot.isPit = root.isPit ?? isPit;\r\n    root.prevLap = root.prevLap ?? 0;\r\n    root.fuelState = root.fuelState ?? 0;\r\n\r\n    if (isPit) {\r\n        root.prevLap = null;\r\n        root.baseline = null;\r\n        root.fuelState = null;\r\n    } else {    \r\n\t    if(root.baseline === null || root.baseline === undefined) {\r\n\t        root.baseline = initialBaseline;\r\n\t    }\r\n\t    \r\n\t    if(root.fuelState === null || root.fuelState === undefined) {\r\n\t    \troot.fuelState = initialFuel;\r\n\t    }\r\n\t}\r\n\r\n    if (root.prevLap > currentLap) {\r\n        root.prevLap = currentLap;\r\n    }\r\n\r\n    if (root.prevLap < currentLap && root.baseline) {\r\n        root.baseline = root.baseline - 1;\r\n        root.prevLap = currentLap;\r\n\r\n        if (!isPit && !root.isPit) {\r\n            root.fuelState = curFuel;\t\r\n        }\r\n    }\r\n    \r\n    if(isPit) {\r\n    \treturn null;\r\n    }\r\n    \r\n    const target = Math.ceil(root.baseline + 0);\r\n    const targetUsage = root.fuelState / (target + 1);\r\n    \r\n\treturn isPit ? null : targetUsage;\r\n}"},"StartColor":"#FF00FF00","EnableMiddleColor":true,"MiddleColor":"#FFF0F8FF","MiddleColorValue":1.0,"EndColor":"#FFFF0000","StartColorValue":0.0,"EndColorValue":2.0,"Mode":4}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"Text":"0.00","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":67.0,"Left":41.0,"Top":286.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"Name":"FuelLastLap","RenderingSkip":50,"MinimumRefreshIntervalMS":500.0,"Bindings":{"Text":{"FormatString":"0.00","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst { property, getFinalValue, transformation, test } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst rawValue = $prop(property);\r\n\r\nreturn getFinalValue(rawValue) || '-';","PreExpression":"const config = loadFromConfig();"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"LLap","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":7.0,"Top":237.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"Name":"FuelLastLapText","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\n\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, 'fuel', 'lapUsage');\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig();"},"Mode":2}}}],"Visible":true,"BlinkPhasisInverted":false,"Name":"Fuel","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"NRG","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":2.0,"Top":444.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"Name":"NRG State Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgState\", root);\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"Text":"100.00","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":35.0,"Top":492.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"Name":"NRG State","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.00","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst { property, getFinalValue, transformation, test } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgState\", root);\r\n\r\nconst rawValue = $prop(property);\r\n\r\nreturn getFinalValue(rawValue);","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontStyle":"Italic","FontSize":50.0,"Text":"54.00","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":66.0,"Left":255.0,"Top":492.0,"Visible":true,"BlinkPhasisInverted":false,"Width":160.0,"Name":"NRG Laps","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"FormatString":"0.00","Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgState\", root);\r\n\r\nconst rawStateValue = $prop(property);\r\n\r\nconst nrgState = getFinalValue(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst nrgUsage = getFinalUsage(rawValue);\r\n\r\nconst result = nrgState / nrgUsage;\r\n\r\nreturn !Number.isNaN(result) ? nrgState / nrgUsage : '-'","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Arial","FontSize":40.0,"Text":"ELaps","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":70.0,"Left":223.0,"Top":443.0,"Visible":true,"BlinkPhasisInverted":false,"Width":229.0,"Name":"NRG Laps Text","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgUsage\", root);\r\n\r\nreturn label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}}],"Visible":true,"BlinkPhasisInverted":false,"Name":"NRG Laps","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgUsage\", root);\r\n\r\nreturn !!label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}}],"Visible":true,"BlinkPhasisInverted":false,"Name":"NRG","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId')\r\nconst label = getPropertyUILabelFromConfig(config, currentGame, carClass, carId, \"fuel\", \"nrgState\", root);\r\n\r\nreturn !!label;","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#00FFFFFF","BorderStyle":{"BorderTop":2,"BorderLeft":2,"BorderRight":2},"Height":320.0,"Left":5.0,"Top":141.0,"Visible":true,"BlinkPhasisInverted":false,"Width":503.0,"Name":"RectangleItem","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.RectangleItem, SimHub.Plugins","IsRectangleItem":true,"BackgroundColor":"#00FFFFFF","BorderStyle":{"BorderBottom":2,"BorderLeft":2},"Height":618.0,"Left":5.0,"Top":141.0,"Visible":true,"BlinkPhasisInverted":false,"Width":438.0,"Name":"RectangleItem","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0}],"Visible":true,"BlinkPhasisInverted":false,"Name":"Outline","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"IsFreezed":true,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"Font":"Segoe UI","FontSize":25.0,"Text":"Fuel","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","BorderStyle":{"BorderTop":2,"BorderRight":2},"Height":35.0,"Left":7.0,"Top":722.0,"Visible":true,"BlinkPhasisInverted":false,"Width":120.0,"IsFreezed":true,"Name":"Fuel Label","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\n\r\nreturn getMasterSectionLabelFromConfig(config, currentGame, carClass, carId, \"fuel\", root);","PreExpression":"const config = loadFromConfig(root);"},"Mode":2},"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\n\r\nreturn !!getMasterSectionLabelFromConfig(config, currentGame, carClass, carId, \"fuel\", root);","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}}],"Visible":true,"BlinkPhasisInverted":false,"Name":"Master Label","RenderingSkip":500,"MinimumRefreshIntervalMS":5000.0}],"Visible":true,"BlinkPhasisInverted":false,"Name":"Fuel and Energy","RenderingSkip":50,"MinimumRefreshIntervalMS":500.0,"Bindings":{"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\n\r\nreturn !!getMasterSectionLabelFromConfig(config, currentGame, carClass, carId, \"fuel\", root);","PreExpression":"const config = loadFromConfig(root);"},"Mode":2}}}],"MinimumRefreshIntervalMS":0.0}],"SnapToGrid":false,"HideLabels":false,"ShowForeground":true,"ForegroundOpacity":100.0,"ShowBackground":true,"BackgroundOpacity":100.0,"ShowBoundingRectangles":false,"GridSize":10,"Images":[],"Metadata":{"ScreenCount":1.0,"InGameScreensIndexs":[0],"IdleScreensIndexs":[0],"MainPreviewIndex":0,"IsOverlay":false,"OverlaySizeWarning":true,"MetadataVersion":2.0,"EnableOnDashboardMessaging":true,"PitScreensIndexs":[],"SimHubVersion":"9.9.3","Width":1280.0,"Height":768.0,"DashboardVersion":""},"ShowOnScreenControls":true,"IsOverlay":false,"EnableClickThroughOverlay":true,"EnableOnDashboardMessaging":true,"UseStrictJSIsolation":false,"UseStrictJSIsolationWarning":true}