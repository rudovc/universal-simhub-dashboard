{"Variables":{"DashboardVariables":[]},"DashboardDebugManager":{},"Version":2,"Id":"0710e1b6-5c23-408f-b813-5f9fcbf4b363","BaseHeight":768,"BaseWidth":1280,"BackgroundColor":"#FF000000","Screens":[{"RenderingSkip":0,"Name":"-2 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"b0bb3efd-2bc0-4524-b5bd-ac22fa492c1b","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"-2"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0},{"RenderingSkip":0,"Name":"-1 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"93b3bc06-dee1-49b7-98b4-5b52d5da4eb6","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"-1"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0},{"RenderingSkip":0,"Name":"+0 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"24e6ae52-62ca-4bca-aa2d-40ccddb38e97","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"0"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0},{"RenderingSkip":0,"Name":"+1 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"e3d7244d-5eaf-4a1f-ab01-6ad0a66f6540","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"+1"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0},{"RenderingSkip":0,"Name":"+2 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"0c5b7237-80f5-41f0-b1b3-621668a8fcb0","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"+2"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0},{"RenderingSkip":0,"Name":"+3 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"9cc9da95-0fec-407e-b2f2-db764d52726a","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"+3"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0},{"RenderingSkip":0,"Name":"+4 Target","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"191a408b-0829-4dee-b0b5-a7120901f806","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.WidgetItem, SimHub.Plugins","Variables":{"DashboardVariables":[{"VariableName":"targetOffset","EvaluateOnlyOnce":true,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":"+4"},"EvaluateBeforeScreenRoles":false},{"VariableName":"estimatedLaps","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"JSExt":1,"Interpreter":1,"Expression":"const currentGame = $prop('DataCorePlugin.CurrentGame');\r\nconst carClass = $prop('CarClass');\r\nconst carId = $prop('CarId');\r\nconst { property, getFinalValue } = getPropertyValueFromConfig(config, currentGame, carClass, carId, 'fuel', 'laps');\r\n\r\nif (property) {\r\n\tconst rawValue = $prop(property);\r\n\t\r\n\treturn getFinalValue(rawValue);\r\n}\r\n\r\nconst validLap = $prop('DataCorePlugin.Computed.Fuel_CurrentLapIsValidForTracking');\r\n\r\nconst { property: stateProp, getFinalValue: getFinalState } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"state\", root);\r\n\r\nconst rawStateValue = $prop(stateProp);\r\n\r\nconst fuelState = getFinalState(rawStateValue);\r\n\r\nconst { property: usageProp, getFinalValue: getFinalUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"lapUsage\", root);\r\n\r\nconst { property: avgUsageProp, getFinalValue: getAvgUsage } = getPropertyValueFromConfig(config, currentGame, carClass, carId, \"fuel\", \"avgUsage\", root);\r\n\r\nconst rawValue = $prop(usageProp);\r\nconst fuelUsage = getFinalUsage(rawValue);\r\n\r\nconst rawAvg = $prop(avgUsageProp);\r\nconst avgUsage = getFinalUsage(rawAvg);\r\n\r\nconst currentLap = $prop('CurrentLap');\r\n\r\nroot.usages = root.usages ?? {};\r\nconst lastLapUsages = cycleValuesOverNLaps(currentLap, fuelUsage, root.usages, 5, validLap);\r\n\r\nconst averageUsage = lastLapUsages.every(usage => !!usage) ? calculateArrayAverage(lastLapUsages) : avgUsage;\r\n\r\nconst isPit = $prop('IsInPit');\r\n\r\nconst sessionType = $prop('SessionTypeName');\r\n\r\nroot.remaining = root.remaining ?? null;\r\nroot.loadedFuel = root.loadedFuel ?? fuelState;\r\n\r\nconst remaining = root.loadedFuel ? root.loadedFuel / averageUsage : 0;\r\n\r\nif(!isPit && root.loadedFuel === null) {\r\n\troot.loadedFuel = fuelState;\r\n} else if (isPit) {\r\n\troot.remaining = null;\r\n\troot.loadedFuel = null;\r\n}\r\n\r\nif(!isPit && root.loadedFuel !== null && (root.remaining == null || sessionType.toLowerCase() === 'practice' && currentLap % PRACTICE_REFRESH_INTERVAL == 0) && remaining > 0) {\r\n\troot.remaining = remaining;\r\n}\r\n\r\nreturn { remaining: root.remaining, loadedFuel: root.loadedFuel };","PreExpression":"const config = loadFromConfig();\r\nconst PRACTICE_REFRESH_INTERVAL = 5;"},"EvaluateBeforeScreenRoles":false}]},"NextScreenCommand":0,"PreviousScreenCommand":0,"AutoSize":true,"FileName":"Universal Fuel Widget with Target.djson","InitialScreenIndex":0,"FreezePageChanges":false,"EnableScreenRolesAndActivation":true,"BackgroundColor":"#00FFFFFF","Height":768.0,"Left":0.0,"Top":0.0,"Visible":true,"BlinkPhasisInverted":false,"Width":1280.0,"Name":"Universal Fuel Widget with Target","RenderingSkip":3,"MinimumRefreshIntervalMS":30.0}],"MinimumRefreshIntervalMS":0.0}],"SnapToGrid":false,"HideLabels":false,"ShowForeground":true,"ForegroundOpacity":100.0,"ShowBackground":true,"BackgroundOpacity":100.0,"ShowBoundingRectangles":false,"GridSize":10,"Images":[],"Metadata":{"ScreenCount":7.0,"InGameScreensIndexs":[0,1,2,3,4,5,6],"IdleScreensIndexs":[0,1,2,3,4,5,6],"MainPreviewIndex":0,"IsOverlay":false,"OverlaySizeWarning":true,"MetadataVersion":2.0,"EnableOnDashboardMessaging":true,"PitScreensIndexs":[],"SimHubVersion":"9.9.3","Width":1280.0,"Height":768.0,"DashboardVersion":""},"ShowOnScreenControls":true,"IsOverlay":false,"EnableClickThroughOverlay":true,"EnableOnDashboardMessaging":true,"UseStrictJSIsolation":false,"UseStrictJSIsolationWarning":true}